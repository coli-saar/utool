<?xml version="1.0"?>

<project name="ubench" default="ubench">
	<property name="build" location="../../build" />
	<property name="source" location="../../src" />
	<property name="pictures" location="../../projects/Ubench/pictures"/>
	<property name="packages" location="../../packages" />
	<property name="doc.api" location="../../docs/api" />

	<property name="jgraph.jar" location="${packages}/jgraph.jar" />
	<property name="jgraphaddons.jar" location="${packages}/jgraphaddons.jar" />
	<property name="itext.jar" location="${packages}/itext-1.3.1.jar" />

	<property name="jgraph.unpacked.classes" value="org/jgraph/**" />
	<property name="itext.unpacked.classes" value="com/lowagie/**" />

	<property name="getopt.jar" location="${packages}/java-getopt-1.0.9.jar" />
	<property name="getopt.unpacked.classes" value="gnu/getopt/*"/>

	<property name="build.classes" location="${build}/classes" />
	<property name="build.lib" location="${build}/lib" />
	<property name="build.src" location="${build}/src" />

	<property name="coli" value="de/saar" />
	<property name="chorus" value="de/saar/chorus" />

	<property name="javacchome" location="${packages}/javacc-4.0" />
	<property name="jgrapht.jar" location="${packages}/jgrapht-0.6.0/jgrapht-0.6.0.jar" />
	<property name="jgrapht.unpacked.classes" value="org/_3pq/jgrapht/**" />

	<property name="ubench-dist.jar" value="${build.lib}/Ubench-1.0.jar" />
	<property name="ubench.jar" value="${build.lib}/Ubench.jar" />
	<property name="ubench.jar.classes" value="${chorus}/ubench/*,${chorus}/treelayout/*,${chorus}/ubench/gui/*,${chorus}/jgraph/*,
		${coli}/getopt/*,${chorus}/domgraph/**/*,${coli}/basic/*" />

	<property name="junit.jar" value="${packages}/junit.jar" />
	<property name="reports.tests" location="testreports" />



	<!-- Jars -->
	<target name="ubench" depends="init,domconOz.javacc,holesemComsem.javacc,mrs.javacc,glue.javacc,jgraph.unpacked,getopt.unpacked,itext.unpacked,jgrapht.unpacked">
		<javac srcdir="${source}"
               destdir="${build.classes}"
               debug="true"
               includes="${chorus}/ubench/*.java,
							${chorus}/jgraph/*.java,
							${chorus}/treelayout/*.java,
							${chorus}/ubench/gui/*.java,
							${chorus}/domgraph/**/*.java,
							${coli}/basic/*.java,
							${coli}/getopt/*.java"
               excludes="**/Test*.java, ${chorus}/ubench/utool/*"
               source="1.5">

			<classpath>
				<pathelement path="${build.classes}" />
			</classpath>
		</javac>

		<jar jarfile="${ubench.jar}"
             basedir="${build.classes}"
             includes="${ubench.jar.classes},${jgraph.unpacked.classes},
					   ${getopt.unpacked.classes},${itext.unpacked.classes},
					   ${jgrapht.unpacked.classes}">
			<manifest>
				<attribute name="Main-Class"
                           value="de.saar.chorus.ubench.gui.Main" />
			</manifest>
		</jar>

	</target>



	<target name="dist" depends="init,domconOz.javacc,holesemComsem.javacc,mrs.javacc,jgraph.unpacked,getopt.unpacked,itext.unpacked,jgrapht.unpacked">


		<javac srcdir="${source}"
               destdir="${build.classes}"
               debug="true"
               includes="${chorus}/ubench/*.java,
							${chorus}/jgraph/*.java,
							${chorus}/treelayout/*.java,
							${chorus}/ubench/gui/*.java,
							${chorus}/domgraph/**/*.java,
							${coli}/basic/*.java,
							${coli}/getopt/*.java"
               excludes="**/Test*.java, ${chorus}/ubench/utool/*"
               source="1.5">

			<classpath>
				<pathelement path="${build.classes}" />
			</classpath>
		</javac>


		<copy todir="tmp_Ubench/src">
			<fileset dir="${source}"
					includes="${ubench.jar.classes}"/>
		</copy>


		<copy todir="tmp_Ubench/projects/Ubench">
			<fileset dir="../../projects/Ubench/" includes="*.xml" />
		</copy>


		<jar jarfile="${ubench-dist.jar}"
             basedir="${build.classes}"
             includes="${ubench.jar.classes},${jgraph.unpacked.classes},${getopt.unpacked.classes},
			${itext.unpacked.classes},${utool-swig.unpacked.classes},${jgrapht.unpacked.classes}">
			<manifest>
				<attribute name="Main-Class"
                           value="de.saar.chorus.ubench.gui.Main" />
			</manifest>

			<fileset dir="tmp_Ubench/"/>
		</jar>

		<delete dir="tmp_Ubench/" />
	</target>

	
	<!-- JavaCC -->
		<target name="domconOz.javacc">
			<javacc 
				javacchome="${javacchome}" 
				target="${source}/${chorus}/domgraph/codec/domcon/DomconOzInputCodec.jj" />
		</target>

		<target name="holesemComsem.javacc">
			<javacc 
				javacchome="${javacchome}" 
				target="${source}/${chorus}/domgraph/codec/holesem/HolesemComsemInputCodec.jj" />
		</target>

	        <target name="mrs.javacc">
	                <javacc 
	                        javacchome="${javacchome}" 
	                        target="${source}/${chorus}/domgraph/codec/mrs/MrsPrologInputCodec.jj" />
	        </target>
	
	        <target name="glue.javacc">
	                <javacc 
	                        javacchome="${javacchome}" 
	                        target="${source}/${chorus}/domgraph/codec/glue/GlueInputCodec.jj" />
	        </target>
	
	
	<!-- JUnit -->
	<!-- If the JUnit targets don't work, make sure that junit.jar is in
	     the classpath, e.g.
	     
	        CLASSPATH=packages/junit.jar:$CLASSPATH ant leonardo-run-tests
	-->



	<!-- JAR Unpacking -->

	<!-- Unpack the Jar file at the path "unpack.jar", unless the
	       unpacked version is already up to date. Up-to-dateness is
	       recorded with a timestamp. "unpack.jar.id" is a unique id for
	       this Jar. -->
	<target name="unpack" depends="check.unpack" unless="nobuild.unpack">
		<unjar src="${unpack.jar}" dest="${build.classes}" />
		<touch file="${build.classes}/timestamps-unpackjar/${unpack.jar.id}" />
	</target>

	<target name="check.unpack">
		<uptodate property="nobuild.unpack"
	    targetfile="${build.classes}/timestamps-unpackjar/${unpack.jar.id}">
			<srcfiles dir="." includes="${unpack.jar}" />
		</uptodate>


	</target>

	<target name="jgraph.unpacked" depends="init" if="jgraph.jar.present">
		<antcall target="unpack" >
			<param name="unpack.jar" value="${jgraph.jar}" />
			<param name="unpack.jar.id" value="jgraph" />
		</antcall>
		<antcall target="unpack" >
			<param name="unpack.jar" value="${jgraphaddons.jar}" />
			<param name="unpack.jar.id" value="jgraphaddons" />
		</antcall>
	</target>

	<target name="getopt.unpacked" depends="init" if="getopt.jar.present">
		<antcall target="unpack">
			<param name="unpack.jar" value="${getopt.jar}" />
			<param name="unpack.jar.id" value="getopt" />
		</antcall>
	</target>

	<target name="itext.unpacked" depends="init" if="itext.jar.present">
		<antcall target="unpack">
			<param name="unpack.jar" value="${itext.jar}" />
			<param name="unpack.jar.id" value="itext" />
		</antcall>
	</target>

	<target name="jgrapht.unpacked" depends="init" if="jgrapht.jar.present">
			<antcall target="unpack" >
				<param name="unpack.jar" value="${jgrapht.jar}" />
				<param name="unpack.jar.id" value="jgrapht" />
			</antcall>
		</target>
	

	<!-- Javadoc -->

	<target name="javadoc" depends="ubench">
		<!-- auto-generated by Eclipse, need to clean this up! -->
		<javadoc 
			access="package" 
			author="false" 
			classpath="${jgraph.jar}:${jgraphaddons.jar}:${build.classes}"
			destdir="${doc.api}" 
			nodeprecated="false" 
			nodeprecatedlist="false" 
			noindex="false" 
			nonavbar="false" 
			notree="false" 
			sourcefiles="${source}/${chorus}/ubench/*.java"
			sourcepath="${source}" 
			splitindex="true" 
			use="true" 
			version="true" />
	</target>


	<!-- Init -->

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.classes}/timestamps-unpackjar" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.src}" />
		<mkdir dir="${reports.tests}" />
		<mkdir dir="${doc.api}" />

		<available file="${jgraph.jar}" property="jgraph.jar.present"/>
		<available file="${jgraphaddons.jar}" property="jgraphaddons.jar.present"/>
		<available file="${getopt.jar}" property="getopt.jar.present"/>
		<available file="${itext.jar}" property="itext.jar.present"/>
		<available file="${utool-swig.jar}" property="utool-swig.jar.present"/>
		<available file="${jgrapht.jar}" property="jgrapht.jar.present"/>
		<available file="${unpack.jar}" property="unpack.jar.present"/>

	</target>

	<!-- Delete all compiled files -->
	<target name="clean">
		<delete>
			<fileset dir="${build.classes}" includes="${ubench.jar.classes}" />
		</delete>
		<delete dir="${build.lib}" />
		<delete dir="${doc.api}" />
	</target>

	
	
	<target name="prepare">
		<mkdir dir="${build.classes}" />
		<copy todir="${build.classes}">
			<fileset dir="../../" excludes="projects/**,META-INF/**,*.jar, build/**, src/**"/>
		</copy>
		<delete>
			<fileset dir="../../" excludes="projects/**,META-INF/**,*.jar, build/**, src/**"/>
		</delete>
		<antcall target="clean"/>

	</target>
</project>
