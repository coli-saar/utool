<?xml version="1.0"?>

<project name="leonardo" default="leonardo">
	<property name="build" location="../../build" />
	<property name="source" location="../../src" />
	<property name="pictures" location="../../projects/Leonardo/pictures"/>
	<property name="packages" location="../../packages" />
	<property name="doc.api" location="../../docs/api" />

	<property name="jgraph.jar" location="${packages}/jgraph.jar" />
	<property name="jgraphaddons.jar" location="${packages}/jgraphaddons.jar" />
	<property name="itext.jar" location="${packages}/itext-1.3.1.jar" />

	<property name="jgraph.unpacked.classes" value="org/jgraph/**" />
	<property name="itext.unpacked.classes" value="com/lowagie/**" />
	
	<property name="getopt.jar" location="${packages}/java-getopt-1.0.9.jar" />
	<property name="getopt.unpacked.classes" value="gnu/getopt/*"/>
	
	<property name="utool-swig.jar" location="${packages}/DomgraphSwig.jar" />
	<property name="utool-swig.unpacked.classes" value="de/saar/chorus/libdomgraph/*" />



	<property name="build.classes" location="${build}/classes" />
	<property name="build.lib" location="${build}/lib" />
	<property name="build.src" location="${build}/src" />

	<property name="coli" value="de/saar" />
	<property name="chorus" value="de/saar/chorus" />



	<property name="leonardo.jar" value="${build.lib}/Leonardo.jar" />
	<property name="leonardo.jar.classes" value="${chorus}/leonardo/*,${chorus}/treelayout/*,${chorus}/leonardo/gui/*,${chorus}/leonardo/utool/*,${chorus}/jgraph/*,${coli}/getopt/*" />

	<property name="junit.jar" value="${packages}/junit.jar" />
	<property name="reports.tests" location="testreports" />



	<!-- Jars -->
	<target name="leonardo" depends="init,jgraph.unpacked,getopt.unpacked,itext.unpacked,utool-swig.unpacked">
		<javac srcdir="${source}"
               destdir="${build.classes}"
               debug="true"
               includes="${chorus}/leonardo/*.java,${chorus}/jgraph/*.java,${chorus}/treelayout/*.java,${chorus}/leonardo/gui/*.java,${chorus}/leonardo/utool/*.java,${coli}/getopt/*.java"
               excludes="**/Test*.java"
               source="1.5">
			<classpath>
				<pathelement path="${jgraph.jar}" />
				<pathelement path="${jgraphaddons.jar}" />
				<pathelement path="${getopt.jar}" />
				<pathelement path="${itext.jar}" />
				<pathelement path="${utool-swig.jar}" />
			</classpath>
		</javac>

		<jar jarfile="${leonardo.jar}"
             basedir="${build.classes}"
             includes="${leonardo.jar.classes},${jgraph.unpacked.classes},${getopt.unpacked.classes},${itext.unpacked.classes},${utool-swig.unpacked.classes}">
			<manifest>
				<attribute name="Main-Class"
                           value="de.saar.chorus.leonardo.gui.Main" />
			</manifest>
		</jar>

	</target>

	<!-- JUnit -->
	<!-- If the JUnit targets don't work, make sure that junit.jar is in
	     the classpath, e.g.
	     
	        CLASSPATH=packages/junit.jar:$CLASSPATH ant leonardo-run-tests
	-->
	<target name="leonardo-compile-tests" depends="leonardo">
		<javac srcdir="${source}"
	           destdir="${build.classes}"
		   includes="${chorus}/leonardo/Test*.java"
		   source="1.5">
			<classpath>
				<pathelement path="${jgraph.jar}" />
				<pathelement path="${jgraphaddons.jar}" />
				<pathelement path="${getopt.jar}" />
				<pathelement path="${leonardo.jar}" />
				<pathelement path="${junit.jar}" />
			</classpath>
		</javac>
	</target>

	<target name="leonardo-run-tests" depends="leonardo-compile-tests">
		<junit >
			<!--  printsummary="yes" -->
			<classpath>
				<pathelement path="${leonardo.jar}" />
				<pathelement path="${jgraph.jar}" />
				<pathelement path="${jgraphaddons.jar}" />
				<pathelement path="${getopt.jar}" />
				<pathelement path="${junit.jar}" />
			</classpath>

			<formatter type="plain" />

			<batchtest todir="${reports.tests}">
				<fileset dir="${build.classes}">
					<include name="${chorus}/leonardo/Test*.class" />
					<exclude name="**/*$*" />
					<exclude name="**/*+*" />
				</fileset>
			</batchtest>
		</junit>
	</target>


	<!-- JAR Unpacking -->

	<!-- Unpack the Jar file at the path "unpack.jar", unless the
	       unpacked version is already up to date. Up-to-dateness is
	       recorded with a timestamp. "unpack.jar.id" is a unique id for
	       this Jar. -->
	<target name="unpack" depends="check.unpack" unless="nobuild.unpack">
		<unjar src="${unpack.jar}" dest="${build.classes}" />
		<touch file="${build.classes}/timestamps-unpackjar/${unpack.jar.id}" />
	</target>

	<target name="check.unpack">
		<uptodate property="nobuild.unpack"
	    targetfile="${build.classes}/timestamps-unpackjar/${unpack.jar.id}">
			<srcfiles dir="." includes="${unpack.jar}" />
		</uptodate>
	</target>

	<target name="jgraph.unpacked" depends="init">
		<antcall target="unpack">
			<param name="unpack.jar" value="${jgraph.jar}" />
			<param name="unpack.jar.id" value="jgraph" />
		</antcall>
		<antcall target="unpack">
			<param name="unpack.jar" value="${jgraphaddons.jar}" />
			<param name="unpack.jar.id" value="jgraphaddons" />
		</antcall>
	</target>

	<target name="getopt.unpacked" depends="init">
		<antcall target="unpack">
			<param name="unpack.jar" value="${getopt.jar}" />
			<param name="unpack.jar.id" value="getopt" />
		</antcall>
	</target>

	<target name="itext.unpacked" depends="init">
		<antcall target="unpack">
			<param name="unpack.jar" value="${itext.jar}" />
			<param name="unpack.jar.id" value="itext" />
		</antcall>
	</target>

	<target name="utool-swig.unpacked" depends="init">
		<antcall target="unpack">
			<param name="unpack.jar" value="${utool-swig.jar}" />
			<param name="unpack.jar.id" value="utool-swig" />
		</antcall>
	</target>

				
	<!-- Javadoc -->

	<target name="javadoc" depends="leonardo">
		<!-- auto-generated by Eclipse, need to clean this up! -->
		<javadoc 
			access="package" 
			author="false" 
			classpath="${jgraph.jar}:${jgraphaddons.jar}:${build.classes}"
			destdir="${doc.api}" 
			nodeprecated="false" 
			nodeprecatedlist="false" 
			noindex="false" 
			nonavbar="false" 
			notree="false" 
			sourcefiles="${source}/${chorus}/leonardo/*.java"
			sourcepath="${source}" 
			splitindex="true" 
			use="true" 
			version="true" />
	</target>


	<!-- Init -->

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.classes}/timestamps-unpackjar" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.src}" />

		<mkdir dir="${reports.tests}" />

		<mkdir dir="${doc.api}" />
	</target>

	<!-- Delete all compiled files -->
	<target name="clean">
		<delete dir="${build.classes}" />
		<delete dir="${build.lib}" />
		<delete dir="${build.src}" />
		<delete dir="${doc.api}" />
	</target>
</project>
