Dokumentation XTAGLexikon

Anna Hunecke, 3.6.2005

Ziel der Anwendung ist das Einlesen der XTAG-Grammatik 
und die Herausgabe in XDG-Format. Die Klasse Server liest
das Lexikon ein. Mit dem Client kann man Woerter/Saetze an 
den Server stellen, der diese dann nachschlaegt und als
XDG-Grammatik zurueckgibt. 

Das Lexikon liegt in Form von vier xml-Dateien vor:
- morphology.xml: wird im Wesentlichen dazu verwendet,
  flektierte Formen auf ihre Grundform zu reduzieren 
- syntax.xml: dient zum Nachschlagen der Grundformen,
  verweist auf Baeume in trees.xml, und Familien in 
  families.xml, in denen ein Eintrag stehen kann
- trees.xml: die XTAG-Baeume
- families.xml: fasst die XTAG-Baeume zu Familien zusammen
 
Der Server baut eine Klasse XDGMain, die das Lexikon 
einliest und die Anfragen beantwortet. Das Einlesen
geschieht mittels des SAX-Parsers. Fuer jede xml-Datei 
gibt es eine defaulthandler-Klasse, die alle dasselbe
Lexikon (Klasse Lexicon) mitbekommen und es nacheinander fuellen:
- MorphHandler: liest jeweils die Werte index, root und pos
  eines Eintrags in eine Instanz der Klasse MorphInfo ein. 
  Die feature-Werte werden nicht beruecksichtigt
- SyntHandler: Die Eintraege in syntax.xml werden mit 
  der Klasse SyntInfo dargestellt. In einem syntInfo
  steht alles, was in einen entry-Knoten steht plus der 
  index-Wert des Eintrags (das gesuchte Wort in seiner
  Grundform)
- FamilyHandler: Der FamilyHandler sammelt alle Baeume
  einer Familie auf. Im Lexikon wird das mit einer Map 
  gespeichert, die von Familiennamen auf Baeume abbildet
- TreeHandler: Der TreeHandler geht durch die Datei und
  baut die XTAG-Baeume auf. Im Lexikon werden sie in einer 
  Map abgelegt, die von Baumnamen auf den Wurzelknoten
  abbildet 

Die XTAG-Baeume bestehen aus verschiedenen Arten von Knoten:
- InnerNode ist ein Nonterminal-Knoten und hat als einzigster
  Kinder
- FootNode ist ein Fussknoten
- SubstitutionNode ist ein Substitutionsknoten
- AnchorNode ist ein Ankerknoten (Platzhalter fuer Woerter,
  der noch mit einem in syntax.xml spezifizierten Ankern 
  instanziiert werden muss)
- TerminalNode ist ein einfacher Terminalknoten

Nachdem die Baeume im Lexikon gespeichert wurden, werden sie 
nicht weiter veraendert, bis der Benutzer eine Anfrage 
schickt. Mit der Methode "lookup" im Lexikon werden die 
Baeume, die zu einem Wort passen, herausgesucht. Bevor
sie an den Benutzer gesendet werden, werden noch die Methoden
"copyAndReplace" und "lexicalize" aufgerufen. "copyAndReplace"
ersetzt die Ankerknoten durch InnerNodes, deren einzigstes Kind 
ein Terminalknoten ist, der den Anker traegt. "lexicalize"
sorgt dafuer, dass ein Baum nur ein einziges nicht-leeres 
Terminalsymbol hat: Alle InnerNodes, deren Kind ein 
Terminalknoten ist, der nicht das nachgeschlagene Wort traegt 
und auch nicht leer ist, werden vom Baum abgetrennt. An deren
Stelle tritt ein SubstitutionNode, dessen Kategorie sich aus
der Kategorie des abgetrennten InnerNodes, einem slash und 
der Kategorie des Terminalsymbols zusammensetzt. Der abgetrennte 
Baum bekommt eine Wurzel, die diesselbe Kategorie traegt. 

Diese modifizierten Baeume werden in XDGMain mit Hilfe der
Klasse Converter weiterverarbeitet.   
